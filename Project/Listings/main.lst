C51 COMPILER V9.56.0.0   MAIN                                                              08/14/2020 16:10:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\user\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\hardwa
                    -re\DELAY;..\hardware\ADC;..\hardware\Flash;..\hardware\Uart;..\hardware\Key;..\hardware\Pwm;..\hardware\WDT;..\hardware\
                    -Timer;..\hardware\LCDdisplay;..\hardware\PID) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\mai
                    -n.obj)

line level    source

   1          /**
   2          * ************************************************************************************
   3          * @Examle Version   K8104
   4          * @Demo Version   V1.00.00
   5          * @Date       2020.6。23
   6          * ************************************************************************************
   7          *
   8          **/
   9          
  10          #define ALLOCATE_EXTERN
  11          #include "HC89F3541.H"
  12          #include "delay.h"
  13          #include "adc.h"
  14          #include "flash.h"
  15          #include "key.h"
  16          #include "uart.h"
  17          #include "pwm.h"
  18          #include "wdt.h"
  19          #include "timer.h"
  20          #include "lcddisplay.h"
  21          #include "PID.h"
  22          #include "math.h"
  23          #include "string.h"
  24          
  25          #define SKU 8104
  26          #define SOFT_VER "1.00.00"
  27          
  28          const float Rp = 10000.0;
  29          const float Bx = 3950.0;
  30          const float T2 = ( 273.15 + 25 );
  31          const float Ka = 273.15;
  32          
  33          
  34          
  35          u16  temper = 0;
  36          
  37          void Clock ( void );
  38          u8 temperature_handle ( void );
  39          void Rx_Data_handle(void);
  40          
  41          
  42          /***************************************************/
  43          /*
  44          函数名称；key_handle()
  45          函数功能：按键处理函数
  46          入口参数：null
  47          出口参数：null
  48          函数说明；处理按键返回的键值调整相应功能
  49          */
  50          /********************************************************/
  51          
  52          static void key_handle ( void )
C51 COMPILER V9.56.0.0   MAIN                                                              08/14/2020 16:10:45 PAGE 2   

  53          {
  54   1        u8 key_val = 0;
  55   1        key_val = key_scan();
  56   1      
  57   1        if ( key_val == KEY_1_PRES )
  58   1        {
  59   2          //LED1 = !LED1;
  60   2         write_temper_std = 1;
  61   2        }
  62   1      
  63   1        else if ( key_val == KEY_2_PRES )
  64   1        {
  65   2          
  66   2          temper = temperature_handle (  );
  67   2          if (write_temper_std == 1)
  68   2          producte_send_cmd ( temper, 0x01 );
  69   2          temper = temper%10;
  70   2          lcd_display_gap ( temper );
  71   2          
  72   2        }
  73   1        else if ( key_val == KEY_3_PRES ) //??
  74   1        {
  75   2          //LED3 = !LED3;
  76   2        
  77   2        }
  78   1      
  79   1      }
  80          
  81          
  82          
  83          /*********************************************************/
  84          /*
  85          函数名称；temperature_handle()
  86          函数功能：温度处理函数
  87          入口参数：null
  88          出口参数：null
  89          函数说明；根据ADC侦测到的值算出温度值
  90          */
  91          /********************************************************/
  92          
  93          u8 temperature_handle ( void )
  94          {
  95   1        u8 temp = 0,temp2 = 0,i = 0;
  96   1        u16 adc_val1 = 0,ntc_val = 0;
  97   1        float ntc_res = 0,ntc_temper = 0,ntc_sum =0;
  98   1      
  99   1        for (i =0;i<10;i++)
 100   1        {
 101   2        get_voltage ( &adc_val1,&ntc_val );
 102   2        ntc_temper = ( float ) ntc_val/4095*5;
 103   2        ntc_res = 5 - ntc_temper;
 104   2        ntc_res =  ntc_res/10000 ;
 105   2        ntc_res =  ntc_temper / ntc_res;
 106   2        ntc_sum += ( 1/ ( log ( ntc_res/Rp ) /Bx+ ( 1/T2 ) ) )-273.15+0.5;
 107   2          
 108   2        } 
 109   1        temp2 = ( u8 ) (ntc_sum/10);
 110   1      
 111   1        return temp2;
 112   1      
 113   1      }
 114          
C51 COMPILER V9.56.0.0   MAIN                                                              08/14/2020 16:10:45 PAGE 3   

 115          
 116          
 117          
 118          
 119          
 120          
 121          
 122          void main()
 123          {
 124   1        Clock();
 125   1        uart_init();
 126   1        adc_init();
 127   1        EA = 1;
 128   1        time0_init ();            //打开总中断
 129   1        key_init();
 130   1        flash_init();
 131   1        PID_Init();
 132   1        pwm_init ( 200 );
 133   1        wdt_init ( 2 );
 134   1        LCD_Init();
 135   1        lcd_display_On();
 136   1        delay_ms ( 1200 );
 137   1        lcd_clear_all ();
 138   1      
 139   1      
 140   1        while ( 1 )
 141   1        {
 142   2      
 143   2      
 144   2          key_handle ();
 145   2         Rx_Data_handle();     
 146   2          clear_wdt();
 147   2      
 148   2        }
 149   1      }
 150          
 151          
 152          void Rx_Data_handle(void)
 153          {
 154   1          if (usart_rx_flag == 3)
 155   1              {
 156   2                  
 157   2                  usart_rx_flag = 0;
 158   2                //  LED3 = !LED3;
 159   2                  write_temper_std = 2;
 160   2      
 161   2              }
 162   1      }
 163          
 164          
 165          void Clock ( void )
 166          {
 167   1        /************************************系统初始化****************************************/
 168   1        CLKSWR = 0x51;            //选择内部高频RC为系统时钟，内部高频RC 1分频，Fosc=16MHz
 169   1        CLKDIV = 0x01;            //Fosc 1分频得到Fcpu，Fcpu=16MHz
 170   1      }
 171          
 172          
 173          
 174          


C51 COMPILER V9.56.0.0   MAIN                                                              08/14/2020 16:10:45 PAGE 4   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    584    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     18      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
